name: Deploy to Staging
on:
  push:
    branches:
      - develop  # Deploy to staging when pushing to develop
  pull_request:
    branches:
      - main  # Deploy to staging for PR preview

env:
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN_STAGING }}
  VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
  VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}

jobs:
  deploy:
    name: Deploy Golf X to Staging
    runs-on: ubuntu-latest
    concurrency: deploy-staging  # Prevent multiple simultaneous deployments
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'node'  # Uses latest stable version
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run type check
        run: npm run typecheck

      - name: Run linter
        run: npm run lint

      - name: Debug environment variables
        run: |
          echo "FLY_API_TOKEN_STAGING exists: ${{ secrets.FLY_API_TOKEN_STAGING != '' }}"
          echo "VITE_SUPABASE_URL exists: ${{ secrets.VITE_SUPABASE_URL != '' }}"
          echo "VITE_SUPABASE_ANON_KEY exists: ${{ secrets.VITE_SUPABASE_ANON_KEY != '' }}"

      - name: Setup Fly.io CLI
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy to Staging
        run: |
          flyctl deploy --remote-only --config fly.staging.toml \
            --build-arg VITE_SUPABASE_URL="${VITE_SUPABASE_URL}" \
            --build-arg VITE_SUPABASE_ANON_KEY="${VITE_SUPABASE_ANON_KEY}"
        
      - name: Show deployment URL
        run: echo "Golf X staging has been deployed to https://golf-x-staging.fly.dev"

      - name: Comment PR
        if: github.event_name == 'pull_request'
        continue-on-error: true  # Don't fail the workflow if commenting fails
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            try {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: 'ðŸš€ Staging deployment complete! View at https://golf-x-staging.fly.dev'
              })
            } catch (error) {
              console.log('Could not create PR comment. This is not critical.');
              console.log('Error:', error.message);
            }